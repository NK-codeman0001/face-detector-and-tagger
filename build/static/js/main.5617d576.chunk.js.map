{"version":3,"sources":["components/Navbar.jsx","components/NewPost.jsx","App.jsx","index.js"],"names":["Navbar","className","NewPost","image","url","width","height","useState","faces","setFaces","friends","setFriends","imgRef","useRef","canvasRef","handleImage","a","faceapi","current","detections","map","d","Object","values","box","useEffect","Promise","all","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceExpressionNet","then","catch","e","console","log","addFriend","prev","target","name","value","style","ref","crossOrigin","src","alt","onMouseEnter","ctx","getContext","lineWidth","strokeStyle","face","strokeRect","i","left","top","placeholder","onChange","type","App","file","setFile","setImage","img","Image","URL","createObjectURL","onload","getImage","htmlFor","files","id","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5617d576.chunk.js","sourcesContent":["const Navbar = () => {\n    return (\n        <div className=\"navbar\">\n             <span>Face-Detection-Tagger</span>\n        </div>\n    )\n}\n\nexport default Navbar\n","import { useEffect, useRef, useState } from \"react\";\nimport * as faceapi from \"face-api.js\";\n\nconst NewPost = ({ image }) => {\n  const { url, width, height } = image;\n  const [faces, setFaces] = useState([]);\n  const [friends, setFriends] = useState([]);\n\n  const imgRef = useRef();\n  const canvasRef = useRef();\n\n  const handleImage = async () => {\n    const detections = await faceapi.detectAllFaces(\n      imgRef.current,\n      new faceapi.TinyFaceDetectorOptions()\n    );\n    setFaces(detections.map((d) => Object.values(d.box)));\n  };\n\n  const enter = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"yellow\";\n    faces.map((face) => ctx.strokeRect(...face));\n  };\n\n  useEffect(() => {\n    const loadModels = () => {\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\n        faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\n        faceapi.nets.faceExpressionNet.loadFromUri(\"/models\"),\n      ])\n        .then(handleImage)\n        .catch((e) => console.log(e));\n    };\n\n    imgRef.current && loadModels();\n  }, []);\n\n  const addFriend = (e) => {\n    setFriends((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  console.log(friends);\n  return (\n    <div className=\"container\">\n      <div className=\"left\" style={{ width, height }}>\n        <img ref={imgRef} crossOrigin=\"anonymous\" src={url} alt=\"\" />\n        <canvas\n          onMouseEnter={enter}\n          ref={canvasRef}\n          width={width}\n          height={height}\n        />\n        {faces.map((face, i) => (\n          <input\n            name={`input${i}`}\n            style={{ left: face[0], top: face[1] + face[3] + 5 }}\n            placeholder=\"Tag a friend\"\n            key={i}\n            className=\"friendInput\"\n            onChange={addFriend}\n          />\n        ))}\n      </div>\n      <div className=\"right\">\n        <h1>Share your post</h1>\n        <input\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          className=\"rightInput\"\n        />\n        {friends && (\n          <span className=\"friends\">\n            with <span className=\"name\">{Object.values(friends) + \" \"}</span>\n          </span>\n        )}\n        <button className=\"rightButton\">Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewPost;\n","import { useEffect, useState } from \"react\";\nimport \"./app.css\";\nimport Navbar from \"./components/Navbar\";\nimport NewPost from \"./components/NewPost\";\n\nfunction App() {\n  const [file, setFile] = useState();\n  const [image, setImage] = useState();\n\n  useEffect(() => {\n    const getImage = () => {\n      const img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = () => {\n        setImage({\n          url: img.src,\n          width: img.width,\n          height: img.height,\n        });\n      };\n    };\n\n    file && getImage();\n  }, [file]);\n\n  return (\n    <div>\n      <Navbar />\n      {image ? (\n        <NewPost image={image} />\n      ) : (\n        <div className=\"newPostCard\">\n          <div className=\"addPost\">\n            <img\n              src=\"https://images.pexels.com/photos/9371782/pexels-photo-9371782.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n              alt=\"\"\n              className=\"avatar\"\n            />\n            <div className=\"postForm\">\n              <input\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                className=\"postInput\"\n              />\n              <label htmlFor=\"file\">\n                <img\n                  className=\"addImg\"\n                  src=\"https://cdn.icon-icons.com/icons2/564/PNG/512/Add_Image_icon-icons.com_54218.png\"\n                  alt=\"\"\n                />\n                <img\n                  className=\"addImg\"\n                  src=\"https://icon-library.com/images/maps-icon-png/maps-icon-png-5.jpg\"\n                  alt=\"\"\n                />\n                <img\n                  className=\"addImg\"\n                  src=\"https://d29fhpw069ctt2.cloudfront.net/icon/image/84451/preview.svg\"\n                  alt=\"\"\n                />\n                <button>Send</button>\n              </label>\n              <input\n                onChange={(e) => setFile(e.target.files[0])}\n                id=\"file\"\n                style={{ display: \"none\" }}\n                type=\"file\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}